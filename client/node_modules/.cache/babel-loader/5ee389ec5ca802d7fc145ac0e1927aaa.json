{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hello/Desktop/friendsList2/friendsList/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      friendDetail: {}\n    };\n  },\n  methods: {\n    getDetail: function getDetail(id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var status, message;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"http://localhost:8081/friend/\" + id).then(function (response) {\n                  return _this.friendDetail = response.data;\n                });\n\n              case 3:\n                _context.next = 10;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                status = _context.t0.status;\n                message = _context.t0.message;\n                console.log(\"Error! HTTPstatus: \".concat(status, \"  Message: \").concat(message));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }))();\n    },\n    toPrevious: function toPrevious() {\n      var previousId = Number(this.$route.params.id) - 1;\n      this.$router.push(\"/detail/\".concat(previousId, \"/\").concat(this.$route.params.length));\n      this.getDetail(previousId);\n    },\n    toNext: function toNext() {\n      var nextId = Number(this.$route.params.id) + 1;\n      this.$router.push(\"/detail/\".concat(nextId, \"/\").concat(this.$route.params.length));\n      this.getDetail(nextId);\n    }\n  },\n  created: function created() {\n    this.getDetail(this.$route.params.id);\n  },\n  computed: {\n    friendNumber: function friendNumber() {\n      if (Number(this.$route.params.id) >= Number(this.$route.params.length)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAiBA;AAEA;EACAA,IADA,kBACA;IACA;MACAC;IADA;EAGA,CALA;EAMAC;IACAC,SADA,qBACAC,EADA,EACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEAC,gDACAC,IADA,CACA;kBAAA;gBAAA,CADA,CAFA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAKAC,MALA,GAKA,kBALA;gBAMAC,OANA,GAMA,mBANA;gBAOAC;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA,CAVA;IAWAC,UAXA,wBAWA;MACA;MACA;MACA;IACA,CAfA;IAgBAC,MAhBA,oBAgBA;MACA;MACA;MACA;IACA;EApBA,CANA;EA4BAC,OA5BA,qBA4BA;IACA;EACA,CA9BA;EA+BAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA;EAPA;AA/BA","names":["data","friendDetail","methods","getDetail","id","axios","then","status","message","console","toPrevious","toNext","created","computed","friendNumber"],"sourceRoot":"src/views","sources":["DetailView.vue"],"sourcesContent":["<template>\n  <div class=\"detail\">\n    <div>\n       <h1>Name: {{ friendDetail.name }}</h1>\n      <p>Food: {{ friendDetail.food }}</p>\n      <p>Animal: {{ friendDetail.animal }}</p>\n      <p>Comment: {{ friendDetail.comment }}</p>\n    </div>\n    <div class=\"btn\">\n      <button @click=\"toPrevious\" v-if=\"this.$route.params.id > 1\">前の人へ</button>\n      <button @click=\"toNext\" v-show=\"friendNumber\">次の人へ</button>\n    </div>\n   \n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default ({\n  data() {\n    return {\n      friendDetail: {},\n    }\n  },\n  methods: {\n    async getDetail(id) {\n      try {\n       await axios.get(\"http://localhost:8081/friend/\" + id)\n        .then(response => (this.friendDetail = response.data))\n      } catch (error) {\n      const status = error.status;\n      const message = error.message;\n      console.log(`Error! HTTPstatus: ${status}  Message: ${message}`)\n      }\n    },\n    toPrevious() {\n      const previousId = (Number(this.$route.params.id) - 1);\n       this.$router.push(`/detail/${previousId}/${this.$route.params.length}`);\n       this.getDetail(previousId);\n     },\n    toNext() {\n       const nextId = (Number(this.$route.params.id) + 1);\n       this.$router.push(`/detail/${nextId}/${this.$route.params.length}`);\n       this.getDetail(nextId);\n    }\n  },\n  created() {\n    this.getDetail(this.$route.params.id);\n  },\n  computed: {\n    friendNumber: function() {\n      if (Number(this.$route.params.id) >= Number(this.$route.params.length)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n})\n</script>\n\n"]},"metadata":{},"sourceType":"module"}